<?xml version="1.0"?>
<!DOCTYPE module PUBLIC
          "-//Puppy Crawl//DTD Check Configuration 1.3//EN"
          "http://www.puppycrawl.com/dtds/configuration_1_3.dtd">

<!--
    Copyright (c) 2013, Expedia Affiliate Network
    All rights reserved.

    Redistribution and use in source and binary forms, with or without
    modification, are permitted provided that redistributions of source code
    retain the above copyright notice, these conditions, and the following
    disclaimer. 

    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
    ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
    WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
    DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR
    ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
    (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
    LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
    ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
    (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
    SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

    The views and conclusions contained in the software and documentation are those
    of the authors and should not be interpreted as representing official policies, 
    either expressed or implied, of the Expedia Affiliate Network or Expedia Inc.
-->

<!--

  Checkstyle configuration that checks the sun coding conventions from:

    - the Java Language Specification at
      http://java.sun.com/docs/books/jls/second_edition/html/index.html

    - the Sun Code Conventions at http://java.sun.com/docs/codeconv/

    - the Javadoc guidelines at
      http://java.sun.com/j2se/javadoc/writingdoccomments/index.html

    - the JDK Api documentation http://java.sun.com/j2se/docs/api/index.html

    - some best practices

  Checkstyle is very configurable. Be sure to read the documentation at
  http://checkstyle.sf.net (or in your downloaded distribution).

  Most Checks are configurable, be sure to consult the documentation.

  To completely disable a check, just comment it out or delete it from the file.

  Finally, it is worth reading the documentation.

-->

<module name="Checker">
    <!--
        If you set the basedir property below, then all reported file
        names will be relative to the specified directory. See
        http://checkstyle.sourceforge.net/5.x/config.html#Checker
    -->

    <!-- Checks for Size Violations.                    -->
    <!-- See http://checkstyle.sf.net/config_sizes.html -->
    <module name="FileLength">
        <property name="max" value="1500"/>
    </module>

    <!-- Checks for whitespace                               -->
    <!-- See http://checkstyle.sf.net/config_whitespace.html -->
    <module name="FileTabCharacter">
        <property name="eachLine" value="true" />
    </module>
    <!-- Checks for Headers                                -->
    <!-- Following interprets the header file as regular expressions. -->
    <!-- See http://checkstyle.sf.net/config_header.html   -->
    <module name="Header">
        <property name="headerFile" value="${basedir}/java.header" />
    </module>

    <module name="SuppressionFilter">
        <property name="file" value="${basedir}/config/checkstyle/checkstyle-suppressions.xml"/>
    </module>

    <module name="JavadocPackage"/>

    <module name="TreeWalker">
        <property name="tabWidth" value="4"/>
        <!-- Checks for Javadoc comments.                     -->
        <!-- See http://checkstyle.sf.net/config_javadoc.html -->
        <module name="JavadocVariable">
            <property name="scope" value="protected"/>
        </module>
        <module name="JavadocMethod">
            <property name="scope" value="protected"/>
        </module>
        <module name="JavadocStyle">
            <property name="checkEmptyJavadoc" value="true" />
        </module>
        <module name="JavadocType">
            <property name="scope" value="protected"/>
        </module>


        <!-- Checks for Naming Conventions.                  -->
        <!-- See http://checkstyle.sf.net/config_naming.html -->
        <module name="ClassTypeParameterName"/>
        <module name="ConstantName"/>
        <module name="LocalFinalVariableName"/>
        <module name="MemberName"/>
        <module name="MethodName"/>
        <module name="MethodTypeParameterName"/>
        <module name="PackageName"/>
        <module name="ParameterName"/>
        <module name="StaticVariableName"/>
        <module name="TypeName"/>

        <!-- Checks for imports                              -->
        <!-- See http://checkstyle.sf.net/config_import.html -->
        <module name="AvoidStarImport"/>
        <module name="AvoidStaticImport">
            <property name="excludes" value="org.junit.Assert.*"/>
            <property name="excludes" value="org.mockito.Mockito.*"/>
            <property name="excludes" value="org.mockito.Matchers.*"/>
            <property name="excludes" value="org.hamcrest.Matchers.*"/>
            <property name="excludes" value="org.powermock.api.mockito.PowerMockito.mockStatic"/>
        </module>
        <module name="IllegalImport">
            <property name="illegalPkgs" value="junit.framework" />
        </module>
        <module name="ImportOrder">
            <property name="groups" value="/^javax?\./,org"/>
            <property name="ordered" value="true"/>
            <property name="separated" value="true"/>
            <property name="option" value="bottom"/>
        </module>
        <module name="RedundantImport"/>
        <module name="UnusedImports"/>

        <!-- Checks for Size Violations.                    -->
        <!-- See http://checkstyle.sf.net/config_sizes.html -->
        <!-- Decide what the maximum allowable number of lines in an anonymous inner class is -->
        <module name="AnonInnerLength" />
        <!-- Decide what the maximums should be before enabling this module-->
        <module name="JavaNCSS">
            <property name="methodMaximum" value="50"/>
            <property name="classMaximum" value="1500"/>
            <property name="fileMaximum" value="2000"/>
        </module>
        <module name="LineLength">
            <property name="max" value="120"/>
        </module>
        <module name="MethodLength"/>

        <module name="ParameterNumber">
            <property name="max" value="15"/>
            <property name="tokens" value="METHOD_DEF"/>
        </module>

        <!-- Checks for whitespace                               -->
        <!-- See http://checkstyle.sf.net/config_whitespace.html -->
        <module name="EmptyForInitializerPad"/>
        <module name="EmptyForIteratorPad"/>
        <module name="GenericWhitespace"/>
        <module name="MethodParamPad"/>
        <module name="NoWhitespaceAfter"/>
        <module name="NoWhitespaceBefore"/>
        <module name="OperatorWrap"/>
        <module name="ParenPad"/>
        <module name="TypecastParenPad"/>
        <module name="WhitespaceAfter"/>
        <module name="WhitespaceAround"/>

        <!-- Modifier Checks                                    -->
        <!-- See http://checkstyle.sf.net/config_modifiers.html -->
        <module name="DeclarationOrder"/>
        <module name="ModifierOrder"/>
        <module name="RedundantModifier"/>

        <!-- Checks for blocks. You know, those {}'s         -->
        <!-- See http://checkstyle.sf.net/config_blocks.html -->
        <module name="AvoidNestedBlocks"/>
        <module name="EmptyBlock"/>
        <module name="LeftCurly"/>
        <module name="NeedBraces"/>
        <module name="RightCurly"/>

        <!-- Checks for common coding problems               -->
        <!-- See http://checkstyle.sf.net/config_coding.html -->
        <module name="CovariantEquals"/>
        <module name="EmptyStatement"/>
        <module name="EqualsHashCode"/>
        <module name="EqualsAvoidNull"/>
        <module name="HiddenField">
            <property name="ignoreSetter" value="true" />
            <property name="ignoreConstructorParameter" value="true" />
        </module>
        <module name="IllegalCatch"/>
        <module name="IllegalInstantiation"/>
        <module name="IllegalThrows"/>
        <module name="JUnitTestCase"/>
        <module name="MagicNumber"/>
        <module name="RedundantThrows"/>
        <module name="SimplifyBooleanExpression"/>
        <module name="SimplifyBooleanReturn"/>
        <module name="StringLiteralEquality"/>

        <!-- Checks for class design                         -->
        <!-- See http://checkstyle.sf.net/config_design.html -->
        <module name="DeclarationOrder"/>
        <module name="FinalClass"/>
        <module name="HideUtilityClassConstructor"/>
        <module name="InterfaceIsType"/>
        <module name="MutableException"/>
        <module name="UncommentedMain"/>

        <!-- Complexity Checks                             -->
        <module name="BooleanExpressionComplexity"/>
        <module name="CyclomaticComplexity">
            <property name="max" value="10"/>
        </module>


        <!-- Checks for annotations                        -->
        <module name="MissingDeprecated"/>
        <module name="MissingOverride"/>

        <!-- Miscellaneous other checks.                   -->
        <!-- See http://checkstyle.sf.net/config_misc.html -->
        <module name="ArrayTypeStyle"/>
        <module name="DefaultComesLast"/>
        <module name="ExplicitInitialization"/>
        <module name="FinalLocalVariable"/>
        <module name="FinalParameters"/>
        <module name="IllegalType">
            <property name="illegalClassNames" value="java.lang.StringBuffer;junit.framework.Assert"/>
        </module>
        <!-- <module name="Indentation"/> -->
        <module name="InnerTypeLast"/>
        <!--<module name="MultipleStringLiterals"/>-->
        <module name="MultipleVariableDeclarations"/>
        <module name="NestedForDepth">
            <property name="max" value="2"/>
        </module>
        <module name="NestedIfDepth">
            <property name="max" value="2"/>
        </module>
        <module name="NestedTryDepth">
            <property name="max" value="2"/>
        </module>
        <module name="NoFinalizer"/>
        <module name="OneStatementPerLine"/>
        <module name="OuterTypeFilename"/>
        <module name="OuterTypeNumber"/>
        <module name="PackageDeclaration"/>
        <!--<module name="RequireThis"/>-->
        <module name="SuperClone"/>
        <module name="TrailingComment"/>
        <module name="UpperEll"/>
        <module name="UncommentedMain"/>
        <module name="UnnecessaryParentheses"/>
    </module>
</module>
