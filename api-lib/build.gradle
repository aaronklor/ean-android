/*
 * Copyright 2012 EAN.com, L.P. All rights reserved.
 */

apply plugin: 'java'
apply plugin: 'checkstyle'

sourceSets.main.java.srcDirs = ['src/app', 'src/stubs']
sourceSets.test.java.srcDirs = ['src/test']

project.checkstyle {
    configFile = ['checkstyle.xml']
    toolVersion = '5.6'
    ignoreFailures = true
    configProperties = [
        copyrightYear: Calendar.getInstance().get(Calendar.YEAR).toString(),
        basedir: rootDir
    ]
}

project.jar {
    baseName = 'ean-api-lib'
    excludes = ['android/']
}

project.javadoc {
    excludes = ['android/']
    title = "EAN Mobile Docs"
}

repositories {
    mavenCentral()
}

dependencies {
    compile 'com.fasterxml.jackson.core:jackson-core:2.1.0'
    compile 'commons-logging:commons-logging:1.1.1'
    compile 'org.apache.httpcomponents:httpclient:4.2.1'
    compile 'org.apache.httpcomponents:httpcore:4.2.2'
    compile 'org.json:json:20090211'
    compile 'junit:junit:4.10'
    compile 'org.hamcrest:hamcrest-all:1.3'
}

check.doLast {
    // do an xsl transform on the output to make it more readable.
    println reporting.baseDir
    ant.xslt(
            basedir: checkstyle.reportsDir,
            destdir: checkstyle.reportsDir,
            extension: '.html',
            style: 'checkstyle.xsl',
            includes: '*.xml')
    // get the reports
    def errorReports = fileTree(checkstyle.reportsDir) {
        include {report -> report.file.text.contains('error line')}
    }
    if (!errorReports.isEmpty()) {
        throw new GradleException('Checkstyle reported errors. Please examine the html files located at ' + checkstyle.reportsDir + ' for more information.');
    }
}